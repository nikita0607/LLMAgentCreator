"""Add agent removing with sessions

Revision ID: 0c95fe7bc071
Revises: 20250907_add_visited_nodes
Create Date: 2025-09-23 13:51:32.751927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision: str = '0c95fe7bc071'
down_revision: Union[str, Sequence[str], None] = '20250907_add_visited_nodes'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('knowledge_embeddings', 'embedding',
               existing_type=Vector(384),
               nullable=True)
    op.drop_index(op.f('idx_knowledge_embeddings_kb_id'), table_name='knowledge_embeddings')
    op.create_foreign_key(None, 'knowledge_embeddings', 'knowledge_node', ['kb_id'], ['id'], ondelete='CASCADE')
    op.alter_column('session', 'agent_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('session_agent_id_fkey'), 'session', type_='foreignkey')
    op.create_foreign_key(None, 'session', 'agent', ['agent_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'session', type_='foreignkey')
    op.create_foreign_key(op.f('session_agent_id_fkey'), 'session', 'agent', ['agent_id'], ['id'])
    op.alter_column('session', 'agent_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'knowledge_embeddings', type_='foreignkey')
    op.create_index(op.f('idx_knowledge_embeddings_kb_id'), 'knowledge_embeddings', ['kb_id'], unique=False)
    op.alter_column('knowledge_embeddings', 'embedding',
               existing_type=Vector(384),
               nullable=False)
    # ### end Alembic commands ###
